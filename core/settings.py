"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import environ
from pathlib import Path

from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),  # üî• Define o caminho global para tradu√ß√µes
]

# Inicializa o django-environ
env = environ.Env()
# Carrega o arquivo .env
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-odt-s1wx(ry!v)vyzwy6i3d6d+7j-#-vf1!r!(!kuofjlq4s@w'
SECRET_KEY = env.str("SECRET_KEY", default="unsafe-secret-key")

JWT_SECRET = os.getenv("JWT_SECRET", "supersecretkey")  # Pode usar a mesma do Django
JWT_ALGORITHM = "HS256"  # Algoritmo usado para assinar os tokens
JWT_EXPIRATION = 3600  # Tempo de expira√ß√£o do token (15 minutos)
JWT_REFRESH_EXPIRATION = 86400  # Tempo de expira√ß√£o do refresh token (24h)


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # Aqui ficam os arquivos est√°ticos personalizados (logo, CSS, JS, etc.)
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = []


# Application definition

AUTH_USER_MODEL = "core.CustomUser"


INSTALLED_APPS = [
    #"unfold",
    'jazzmin',
    'django_extensions',
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.admin",  
    "whitenoise.runserver_nostatic", 
    "simple_history",
    "health_check",
    "health_check.cache",
    "health_check.storage",
    "watchman",
    "oauth2_provider",
    "core",  # Seu app principal
]

OAUTH2_PROVIDER = {
    "ACCESS_TOKEN_EXPIRE_SECONDS": 86400,  # Tempo de expira√ß√£o do token (24h)
    "REFRESH_TOKEN_EXPIRE_SECONDS": 86400,  # Tempo de expira√ß√£o do refresh token (24h)
    "ROTATE_REFRESH_TOKENS": True,  # Gera um novo refresh token ao renovar um token
    "SCOPES": {
        "read": "Ler dados",
        "write": "Modificar dados",
    },
}

AUTHENTICATION_BACKENDS = (
    "oauth2_provider.backends.OAuth2Backend",
    "django.contrib.auth.backends.ModelBackend",  # Mant√©m a autentica√ß√£o padr√£o
)


OAUTH2_CLIENT_ID = env("OAUTH2_CLIENT_ID")
OAUTH2_CLIENT_SECRET = env("OAUTH2_CLIENT_SECRET")

WATCHMAN_AUTH_DECORATOR = "django.contrib.admin.views.decorators.staff_member_required"

WATCHMAN_CHECKS = (
    "core.watchman_checks.advanced_database_check",
)

MIDDLEWARE = [
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "simple_history.middleware.HistoryRequestMiddleware",  # Middleware do simple_history
]


ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("DATABASE_NAME"),
        "USER": env("DATABASE_USER"),
        "PASSWORD": env("DATABASE_PASSWORD"),
        "HOST": env("DATABASE_HOST"),
        "PORT": env.int("DATABASE_PORT", default=5432),
        "TEST" : {
            "NAME" : "test_nsgates_db"
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGES = [
    ("en", _("English")),
    ("pt-br", _("Portugu√™s (Brasil)")),
    ("es", _("Espa√±ol")),
]

LANGUAGE_CODE = "pt-br"  # üî• Definir o idioma padr√£o
USE_I18N = True  # Habilita a internacionaliza√ß√£o
USE_L10N = True  # Usa formata√ß√£o local
USE_TZ = True  # Mant√©m suporte a Timezone

TIME_ZONE = env("TIME_ZONE", default="UTC")  # Carrega do .env, padr√£o UTC





# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#UNFOLD = {
#    "SITE_TITLE": "NsLGates Manager",  # Nome do admin
#    "SITE_HEADER": "NsGates",  # Cabe√ßalho
#    "SITE_URL": "/",  # URL inicial ao clicar no t√≠tulo
#    "SHOW_LANGUAGE_SWITCHER": True,  # üî• Adiciona um bot√£o para trocar idioma
#}

JAZZMIN_SETTINGS = {
    #"show_ui_builder": True,  # Ativa o bot√£o de customiza√ß√£o no painel
    "site_title": "NsGates Admin",  # Nome na aba do navegador
    "site_header": "NsGates",  # Nome na barra superior
    "site_brand": "Gates",  # Nome no menu lateral
    "welcome_sign": "Bem-vindo ao painel NsGates",  # Mensagem da tela de login
    "site_icon" : "images/favicon.png",
    "login_logo": "images/logo_login.png",  # üîπ Logo na tela de login
    "site_logo_classes": "img-fluid p-2",
    #"site_icon": "images/favicon.ico",  # üîπ √çcone do navegador (favicon)
    "site_logo": "/images/logo.png",  # Arquivo dentro de static/
    "site_logo_classes": "",  # Formato da logo (opcional) img-circle
    #"theme": "flatly",
    #"custom_css" : "css/custom_admin.css"
    "site_footer" : "NsGate 1.0.0",
    "order_with_respect_to": [
        "auth",  # Usu√°rios e Permiss√µes
        "core.CustomUser",  # Usu√°rios personalizados primeiro
        "core.TokenIntegration",  # Tokens depois
    ],
    "icons": {
        "auth.Group" : "fas fa-users-cog",
        "core.CustomUser": "fas fa-user",  # √çcone de usu√°rio üë§
        "core.TokenIntegration": "fas fa-key",  # √çcone de chave üîë
        "auth": "fas fa-users-cog",  # √çcone do m√≥dulo de autentica√ß√£o
        "auth.user": "fas fa-user",  # √çcone para usu√°rios
        "auth.group": "fas fa-users",  # √çcone para grupos de permiss√µes
        "core_customuser": "fas fa-user-shield",  # √çcone para o modelo CustomUser
        "core_tokenintegration": "fas fa-key",  # √çcone para tokens de integra√ß√£o
        "core.apikey": "fas fa-key",
        "oauth2_provider.accesstoken": "fas fa-key",  # Access Tokens
        "oauth2_provider.application": "fas fa-server",  # Applications
        "oauth2_provider.grant": "fas fa-handshake",  # Grants
        "oauth2_provider.idtoken": "fas fa-id-card",  # ID Tokens
        "oauth2_provider.refreshtoken": "fas fa-sync",  # Refresh Tokens
    }
    
}

JAZZMIN_SETTINGS["custom_css"] = "css/custom_admin.css"


JAZZMIN_UI_TWEAKS = {
    "navbar": "navbar-dark bg-primary",  # Cor da barra superior
    "sidebar": "sidebar-dark-primary",  # Cor do menu lateral
    "sidebar_nav_active": "primary",  # Cor do item ativo no menu
    "body_small_text": False,  # Texto pequeno ou normal
    "footer_fixed": False,  # Se o rodap√© fica fixo
    "navbar_fixed": True,  # Se a navbar fica fixa no topo
    "sidebar_fixed": True,  # Se a sidebar fica fixa na lateral
}
